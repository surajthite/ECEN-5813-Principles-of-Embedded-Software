
    cbuff* a ;
    a= malloc(sizeof(cbuff));
    a->cbuffptr = malloc(sizeof(int8_t) * 10);
    cbuff_init(a,10);

for (int i=0;i<5;i++)
{
	cbuff_add(a,i);
}

 int8_t *temp = a->cbuffptr;
 for (int i=0;i<5;i++)
 {
	    printf("\n \r %d",*temp);
	    temp++;
 }
 cbuff_status s;
 int8_t sar =0;
 s=cbuff_remove(a,sar);
 //printf("\n \r %d",s);
// printf("\n \r %d",sar);
 int8_t *temp1 = a->tail;
 printf("\n \r \n \n\n");
  for (int i=0;i<a->count;i++)
  {
 	    printf("\n \r %d",*temp1);
 	    temp1++;
  }
	cbuff_add(a,5);
	temp1 = a->tail;
	 printf("\n \r \n \n\n");
	  for (int i=0;i<a->count;i++)
	  {
	 	    printf("\n \r %d",*temp1);
	 	    temp1++;
	  }
	  s=cbuff_remove(a,sar);
//	  printf("\n \r %d",s);
	//   printf("\n \r %d",sar);
	   temp1 = a->tail;
	   printf("\n \r \n \n\n");
	   for (int i=0;i<a->count;i++)
	     {
	    	    printf("\n \r %d",*temp1);
	    	    temp1++;
	     }
